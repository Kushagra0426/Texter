{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","copyright","position","bottom","right","color","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","reduce","s","c","charAt","slice","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","navigator","clipboard","writeText","join","trim","match","length","filter","element","border","height","class","About","myStyle","left","aria-labelledby","data-bs-parent","App","setMode","document","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.94574c4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"#\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    let myStyle = {\r\n        border : '1px solid black',\r\n        height: '300px'\r\n    }\r\n\r\n    let myStyle1 = {\r\n        color : 'white',\r\n        border : '1px solid white',\r\n        height : '300px'\r\n    }\r\n\r\n    let copyright = {\r\n        position: 'relative',\r\n        bottom: '8px',\r\n        right: '100px',\r\n        color: props.mode==='dark'?'white':'black'\r\n    }\r\n\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleTiClick = ()=>{\r\n        function titleCase(st) {\r\n            return st.toLowerCase().split(\" \").reduce( (s, c) =>\r\n            s +\"\"+(c.charAt(0).toUpperCase() + c.slice(1) +\" \"), '');\r\n        }\r\n        let newText = titleCase(text);\r\n        setText(newText);\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText('');\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const speak = () =>{\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'#0C090A'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#0C090A':'white', \r\n                    color: props.mode==='dark'?'white':'#0C090A'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleUpClick}>Upper Case</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleLoClick}>Lower Case</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleTiClick}>Title Case</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={speak}>Speak</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleClearClick}>Clear Screen</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2 my-3\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#0C090A'}} >\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.trim() === '' ? 0 : text.match(/\\S+/g).length} words and {text.length} characters</p>\r\n                <p>{0.08 * text.split(/\\s+/).filter((element)=>{\r\n                    return element.length!==0\r\n                }).length} Minutes read</p>\r\n                <h1>Preview</h1>\r\n            </div>\r\n            <div className=\"container my-3\" style={\r\n                props.mode === 'dark'?myStyle1:myStyle\r\n            }>\r\n                <p>{text.length>0?text:\"Enter some text in the TextBox...\"}</p>\r\n            </div>\r\n            <div class=\"container my-3\" style={copyright}>\r\n                <footer>\r\n                    &copy; 2023 Kushagra Saxena, All rights reserved. \r\n                </footer>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    let myStyle = {\r\n        color : props.mode === 'dark'?'white':'#0C090A',\r\n        backgroundColor : props.mode === 'dark'?'#0C090A':'white'\r\n    }\r\n\r\n    let copyright = {\r\n        position: 'absolute',\r\n        bottom: '8px',\r\n        left: '16px',\r\n        color: props.mode==='dark'?'white':'black'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'#0C090A'}}>\r\n            <h1 className='my-3'>About Texter</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your Text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n                        <div className=\"accordion-body\">\r\n                            <strong>Texter</strong> provides a way to analyze your text quickly and efficiently. Be it <strong>word count</strong>, <strong>character count</strong> or <strong>minute read</strong>.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>Texter</strong> is a free character count tool that provides instant <strong>character count</strong> and <strong>word count</strong> statistics for a given text. Texter reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>Texter</strong> can work in any Web browser such as Google Chrome, Mozilla Firefox, Microsoft Edge, Safari, Opera, etc. It suits to count characters in Facebook Posts, Blogs, Excel docs, Pdf docs, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container my-3\" style={copyright}>\r\n            <footer>\r\n                &copy; 2023 Kushagra Saxena, All rights reserved. \r\n            </footer>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React from 'react'\nimport About from './components/About';\nimport { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = ()=>{\n      if(mode === 'light'){\n          setMode('dark');\n          document.body.style.backgroundColor = '#0C090A';\n      }\n      else{\n          setMode('light');\n          document.body.style.backgroundColor = 'white';\n      }\n  }\n\n  return (\n    <>\n      <Router>\n      <Navbar title=\"Texter\" mode={mode} toggleMode={toggleMode} />\n      <div className='container my-3'>\n              <Routes>\n                  <Route exact path=\"/about\" element={<About mode={mode}/>} />\n                  <Route exact path=\"/\" element={<TextForm heading=\"Enter your Text...\" mode={mode}/>} />\n              </Routes>\n          \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}